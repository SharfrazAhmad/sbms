package in.ashokit.service;

import java.io.File;
import java.io.FileOutputStream;
import java.util.List;

import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.Row;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Example;
import org.springframework.stereotype.Service;

import in.ashokit.entity.CitizenPlan;
import in.ashokit.repo.CitizenPlanRepository;
import in.ashokit.request.SearchRequest;
import jakarta.servlet.http.HttpServletResponse;

@Service
public class ReportServiceImpl implements ReportService {

	@Autowired
	private CitizenPlanRepository planRepo;

	@Override
	public List<String> getPlanNames() {
		return planRepo.getPlanNames();
	}

	@Override
	public List<String> getPlanStatus() {
		return planRepo.getPlanStatus();
	}

	@Override
	public List<CitizenPlan> search(SearchRequest request) {
		CitizenPlan entity = new CitizenPlan();
		
		if(null!=request.getPlanName() && !"".equals(request.getPlanName())) {
			entity.setPlanName(request.getPlanName());
		}
		
		if(null!=request.getPlanStatus() && !"".equals(request.getPlanStatus())) {
			entity.setPlanStatus(request.getPlanStatus());
		}
		
		if(null!=request.getGender() && !"".equals(request.getGender())) {
			entity.setGender(request.getGender());
		}
		
		return planRepo.findAll(Example.of(entity));
	}

	@Override
	public boolean exportExcel(HttpServletResponse response) throws Exception {
		List<CitizenPlan> records = planRepo.findAll();
		
		HSSFWorkbook workbook = new HSSFWorkbook();
		HSSFSheet sheet = workbook.createSheet("plans-data");
		Row HeaderRow = sheet.createRow(0);
		HeaderRow.createCell(0).setCellValue("id");
		HeaderRow.createCell(1).setCellValue("Citizen Name");
		HeaderRow.createCell(2).setCellValue("Plan Name");
		HeaderRow.createCell(3).setCellValue("Plan Status");
		HeaderRow.createCell(4).setCellValue("Plan Start Date");
		HeaderRow.createCell(5).setCellValue("Plan End Date");
		HeaderRow.createCell(6).setCellValue("Benefit Amount");
		
		int dataRowIndex=1;
		for(CitizenPlan plan:records) {
			Row rowData = sheet.createRow(dataRowIndex);
			rowData.createCell(0).setCellValue(plan.getCitizenId());
			rowData.createCell(1).setCellValue(plan.getCitizenName());
			rowData.createCell(2).setCellValue(plan.getPlanName());
			rowData.createCell(3).setCellValue(plan.getPlanStatus());
			rowData.createCell(4).setCellValue(plan.getPlanStartDate());
			rowData.createCell(5).setCellValue(plan.getPlanEndDate());
			if(plan.getBenefitAmt() !=null) {
				rowData.createCell(6).setCellValue(plan.getBenefitAmt());
			}
			else {
				rowData.createCell(6).setCellValue("N/A");
			}
			dataRowIndex++;
		}
		
		FileOutputStream fos = new FileOutputStream(new File("plans.xls"));
		workbook.write(fos);

		workbook.close();
		
		return false;
	}

	@Override
	public boolean exportPdf() {
		// TODO Auto-generated method stub
		return false;
	}

}
